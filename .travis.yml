language: cpp
dist: trusty
branches:
    only:
        - master

os:
    - linux

compiler:
    - clang
    - g++

env:
    - BUILD_TYPE=Debug CXX_FLAGS=-std=c++03
    - BUILD_TYPE=Debug CXX_FLAGS=-std=c++11
    - BUILD_TYPE=Release CXX_FLAGS=-std=c++03
    - BUILD_TYPE=Release CXX_FLAGS=-std=c++11

addons:
    apt:
        sources:
            - boost-latest
            - ubuntu-toolchain-r-test
        packages:
            - libboost-filesystem1.55-dev
            - libboost-thread1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - libboost-system1.55-dev
            - libboost-random1.55-dev
            - libboost-test1.55-dev
            - libboost-locale1.55-dev
            - g++-4.8
            - libsdl1.2-dev
            - libsdl-mixer1.2-dev
            - libsdl2-dev
            - libsdl2-mixer-dev
            - libcurl4-openssl-dev
            - libbz2-dev
            - libminiupnpc-dev
            - liblua5.2-dev

cache:
    directories:
        - ${TRAVIS_BUILD_DIR}/deps

matrix:
    include:
        - os: osx
          compiler: clang
          install:
              - brew update
              - brew install sdl
              - brew install sdl_mixer
              - brew install gettext
              - brew install miniupnpc
              - brew link --force gettext
              - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
              - mkdir -p ${DEPS_DIR}
              - |
                CMAKE_DIR="${DEPS_DIR}/cmakeOsx"        
                tools/ci/installCMake.sh "3.8.2" "${CMAKE_DIR}" cmakeSrc
                export PATH="${CMAKE_DIR}/bin:${PATH}"
              - cd ${TRAVIS_BUILD_DIR}
          #                                                             Travis libs are x64 only
          env: BUILD_TYPE=Debug CXX_FLAGS=-std=c++03 ADDITIONAL_CMAKE_FLAGS="-DRTTR_NOi386=ON" GCOV="gcov"
    exclude:
        - compiler: clang
          env: BUILD_TYPE=Debug CXX_FLAGS=-std=c++03
        - compiler: clang
          env: BUILD_TYPE=Release CXX_FLAGS=-std=c++03

install:
    - export ADDITIONAL_CMAKE_FLAGS=""
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    - mkdir -p ${DEPS_DIR}
    # Use CMake 3.8.2 (same as build server)
    - |
        CMAKE_DIR="${DEPS_DIR}/cmakeLin"        
        tools/ci/installCMake.sh "3.8.2" "${CMAKE_DIR}" cmakeSrc
        export PATH="${CMAKE_DIR}/bin:${PATH}"
    # Enable coverage analysis only in debug and for g++
    - |
        if [ "$CXX" = "g++" ] && [ "$BUILD_TYPE" = "Debug" ]; then
            # GCov 4.6 cannot handle the file structure
            export CXX="g++-4.8"
            export GCOV="gcov-4.8"

            # Install newer lcov (1.9 seems to fail: http://gronlier.fr/blog/2015/01/adding-code-coverage-to-your-c-project/)
            export LCOV_ROOT="${DEPS_DIR}/lcov"
            LCOV_URL="http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz"
            mkdir "$LCOV_ROOT" && travis_retry wget --quiet -O - ${LCOV_URL} | tar --strip-components=1 -xz -C $LCOV_ROOT
            export PATH=${LCOV_ROOT}/bin:${PATH}
            which lcov

            # Install coveralls tool
            gem install coveralls-lcov

            # Enable
            export RTTR_COVERAGE="1"
            export ADDITIONAL_CMAKE_FLAGS="${ADDITIONAL_CMAKE_FLAGS} -DRTTR_ENABLE_COVERAGE=ON"
        else
            export RTTR_COVERAGE="0"
        fi
    # C++11 requires gcc-4.8 or newer
    - if [ "$CXX" = "g++" ] && [ "$CXX_FLAGS" = "-std=c++11" ]; then export CXX="g++-4.8"; export CC="gcc-4.8"; fi
    - cd ${TRAVIS_BUILD_DIR}

before_script:
    - "export DISPLAY=:99.0"
    - |
        if [ "$TRAVIS_OS_NAME" = "osx" ]; then
            ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok )&
        else
            sh -e /etc/init.d/xvfb start
        fi
    - sleep 3 # give xvfb some time to start

script: tools/ci/travisBuild.sh

after_success:
    - |
        if [ "$RTTR_COVERAGE" = "1" ]; then
            tools/ci/uploadCoverageData.sh
        fi
